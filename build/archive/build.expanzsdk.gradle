// Pull the plugin from a Maven Repo
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.eriwen:gradle-js-plugin:1.1'
    }
}

buildscript {
    configurations.classpath.resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenLocal()
    mavenCentral()
}

// Invoke the plugin
apply plugin: 'js'

project.buildDir = '../js/min'
ext {
	jsSrcDir = "${buildDir}/../"
	//env = System.getenv()
	//jsVersion = "" //${env.BUILD_NUMBER}.
}
def jsVersion = Integer.toHexString(Integer.parseInt(new java.text.SimpleDateFormat('yyDDHHmm').format(new Date())))

// Declare your sources
javascript.source {
    custom {
        js {
            srcDir jsSrcDir
            include "*.js"
            //exclude "*.min.js"
        }
    }
}

//task clean(type: Delete) {
//	println 'Cleaning files'
//   delete buildDir
//}

// Combine JS files
task combinejs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
	println "Combining ${jsVersion}"
    source = javascript.source.custom.js.files
    dest = "${buildDir}/expanz.sdk.${jsVersion}.js"
}
task minifyjs(type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
	println "Minifying ${jsVersion}"
    source = combinejs
    dest = file("${buildDir}/expanz.sdk..${jsVersion}.min.js")
    closure {
        warningLevel = 'VERBOSE'
        compilationLevel = 'ADVANCED_OPTIMIZATIONS'
    }
}

task gzipjs(type: com.eriwen.gradle.js.tasks.GzipJsTask) {
	println "Compressing ${jsVersion}"
    source = minifyjs
    dest = file("${buildDir}/expanz.sdk.${jsVersion}.min.js.gz")
}





// Specify a collection of files to be combined, then minified and finally GZip compressed.
//combineJs  {
//	dependsOn << 'clean'
//    file1 = fileTree(dir: "${jsDir}", includes: ['jquery-1.7.1.js'])
//	file2 = fileTree(dir: "${jsDir}", includes: ['jquery.cookies.2.2.0.js'])
//	file3 = fileTree(dir: "${jsDir}", includes: ['jquery-ui-1.8.16.custom.min.js'])
//	file4 = fileTree(dir: "${jsDir}", includes: ['jquery.i18n.properties-min-1.0.9.js'])
//	file5 = fileTree(dir: "${jsDir}", includes: ['json2.js'])
//	file6 = fileTree(dir: "${jsDir}", includes: ['modernizr-2.0.6.js'])
//	file7 = fileTree(dir: "${jsDir}", includes: ['underscore-min.js'])
//	file8 = fileTree(dir: "${jsDir}", includes: ['backbone-min.js'])
//	file9 = fileTree(dir: "${jsDir}", includes: ['expanz.util.js'])
//	file10 = fileTree(dir: "${jsDir}", includes: ['expanz.factory.js'])
//	file11 = fileTree(dir: "${jsDir}", includes: ['expanz.html.js'])
//	file10 = fileTree(dir: "${jsDir}", includes: ['expanz.collection.js'])
//	file11 = fileTree(dir: "${jsDir}", includes: ['expanz.model.js'])
//	file12 = fileTree(dir: "${jsDir}", includes: ['expanz.net.js'])
//	file13 = fileTree(dir: "${jsDir}", includes: ['expanz.storage.js'])
//	file14 = fileTree(dir: "${jsDir}", includes: ['expanz.model.data.js'])
//	file15 = fileTree(dir: "${jsDir}", includes: ['expanz.view.js'])
//	file16 = fileTree(dir: "${jsDir}", includes: ['expanz.js'])

//    inputs.files file1 + file2 + file3 + file4 + file5 + file6 + file7 + file8 + file9 + file10 + file11 + file12 + file13 + file14 + file15 + file16
//    outputs.file file("${jsDir}/min/expanz.sdk.${jsVersion}js")
//}

// Specify a collection of files to be combined, then minified and finally GZip compressed.
//minifyJs  {
//	dependsOn << 'combineJs'
//    file1 = fileTree(dir: "${jsDir}/min/", includes: ["expanz.sdk.${jsVersion}js"])
//    inputs.files file1 
//    outputs.file file("${jsDir}/min/expanz.sdk.${jsVersion}min.js")
//}

// Specify a collection of files to be combined, then minified and finally GZip compressed.
//gzipJs  {
//	dependsOn << 'minifyJs'
//    file1 = fileTree(dir: "${jsDir}/min/", includes: ["expanz.sdk.${jsVersion}min.js"])
//    inputs.files file1 
//    outputs.file file("${jsDir}/min/expanz.sdk.${jsVersion}min.gzip.js")
//}

//task clean {
//	println 'Cleaning files'
//	doLast {
//		ant.delete(dir: "${jsDir}/min/")
//	}
//}

//task minify (dependsOn: ['gzipJs'] ){ 
//	println "Starting minifying version ${env.BUILD_NUMBER}"
//}




