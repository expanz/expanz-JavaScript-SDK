// Pull the plugin from a Maven Repo
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.eriwen:gradle-js-plugin:1.1'
    }
}

buildscript {
    configurations.classpath.resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenLocal()
    mavenCentral()
}

// Invoke the plugin
apply plugin: 'js'

ext {
	jsAdaptersSrcDir = "${projectDir}/../source/js/adapters"
	jsComponentsSrcDir = "${projectDir}/../source/js/components"
	jsExpanzSrcDir = "${projectDir}/../source/js/expanz"
	jsVendorSrcDir = "${projectDir}/../source/js/vendor"
	jsVendorSimpleSrcDir = "${projectDir}/../source/js/vendor-simple"
	jsVendorWhitespaceSrcDir = "${projectDir}/../source/js/vendor-whitespace"
	jsTmpVendorSrcDir = "${projectDir}/tmp-vendor"
	//env = System.getenv()
	//jsVersion = "" //${env.BUILD_NUMBER}.
}
project.buildDir = '../public/js'
def jsVersion = Integer.toHexString(Integer.parseInt(new java.text.SimpleDateFormat('yyDDHHmm').format(new Date())))

// Declare your sources
javascript.source {
    adapters {
        js {
            srcDir jsAdaptersSrcDir
            include "*.js"
            exclude "*.all*.js"
        }
    }
    components {
        js {
            srcDir jsComponentsSrcDir
            include "*.js"
            exclude "*.all*.js"
        }
    }
    expanz {
        js {
            srcDir jsExpanzSrcDir
            include "*.js"
            exclude "*.sdk*.js"
        }
    }
    vendorsimple {
        js {
            srcDir jsVendorSimpleSrcDir
            include "*.js"
        }
    }
    vendorwhitespace {
        js {
            srcDir jsVendorWhitespaceSrcDir
            include "*.js"
        }
    }
    vendor {
        js {
            srcDir jsTmpVendorSrcDir
            include "*.js"
        }
    }
}

//task clean(type: Delete) {
//	println 'Cleaning files'
//   delete buildDir
//}

// Combine JS files
task combineexpanzjs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
	println "Combining Expanz SDK ${jsVersion}"
    source = javascript.source.expanz.js.files
    dest = "${buildDir}/expanz.sdk.${jsVersion}.js"
}
task minifyexpanzjs(type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
	println "Minifying Expanz SDK ${jsVersion}"
    source = combineexpanzjs
    dest = file("${buildDir}/min/expanz.sdk.${jsVersion}.min.js")
    closure {
        warningLevel = 'VERBOSE'
        compilationLevel = 'WHITESPACE_ONLY'//'SIMPLE_OPTIMIZATIONS'
		//externs = files("${jsVendorSrcDir}/min-whitespace/backbone-min.js")
    }
}
task gzipexpanzjs(type: com.eriwen.gradle.js.tasks.GzipJsTask) {
	println "Compressing Expanz SDK ${jsVersion}"
    source = minifyexpanzjs
    dest = file("${buildDir}/min/expanz.sdk.${jsVersion}.min.gzip.js")
}
